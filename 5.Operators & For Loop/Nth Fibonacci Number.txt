Nth Fibonacci Number
Send Feedback
Nth term of Fibonacci series F(n), where F(n) is a function, is calculated using the following formula -
    F(n) = F(n-1) + F(n-2), 
    Where, F(1) =  0, 
           F(2) = 1
Provided N you have to find out the Nth Fibonacci Number.
Input Format :
The first line of each test case contains a real number ‘N’.
Output Format :
For each test case, return its equivalent Fibonacci number.
Constraints:
1 <= N <= 10000     
Where ‘N’ represents the number for which we have to find its equivalent Fibonacci number.

Time Limit: 1 second
Sample Input 1:
6
Sample Output 1:
8
Explanation of Sample Input 1:
Now the number is ‘6’ so we have to find the “6th” Fibonacci number
So by using the property of the Fibonacci series i.e 

[ 0, 1, 2, 3, 5, 8]
So the “6th” element is “8” hence we get the output.


import java.util.Scanner;
public class Solution
{
public static void main(String args[])
{
Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int a =0;
    int b =1;
    int c;
    for(int i=0;i<n;i++)
    {
        c=a+b;
        a=b;
        b=c;
    }
    System.out.println(a);
}
}


// import java.util.Scanner;
// public class Solution
// {
// public static void main(String args[])
// {
// Scanner sc = new Scanner(System.in);
// int n, t1 = 0, t2 = 1, nextTerm = 0, i;
// //System.out.println("Enter the n value: ");
// n = sc.nextInt();
// if(n == 0 || n == 1) 
// System.out.println();
// else
// nextTerm = t1 + t2;
// for (i = 2; i <= n; ++i)
// {
// t1 = t2;
// t2 = nextTerm;
// nextTerm = t1 + t2;
// }
// System.out.println(t2);
// }
// }
